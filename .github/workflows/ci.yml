name: CI

on:
  push:
    branches: ["master", "develop"]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.24.3"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache gödel
        uses: actions/cache@v4
        with:
          path: ~/.godel
          key: ${{ runner.os }}-godel-${{ hashFiles('godelw', 'godel/config/godel.yml') }}
          restore-keys: |
            ${{ runner.os }}-godel-

      - name: Build
        run: ./godelw build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: out/build/
          retention-days: 1

  verify:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        go-version: ["1.24.3"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache gödel
        uses: actions/cache@v4
        with:
          path: ~/.godel
          key: ${{ runner.os }}-godel-${{ hashFiles('godelw', 'godel/config/godel.yml') }}
          restore-keys: |
            ${{ runner.os }}-godel-

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: out/build/

      - name: Verify (format, imports, linting)
        run: ./godelw verify --skip-test

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        go-version: ["1.24.3"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache gödel
        uses: actions/cache@v4
        with:
          path: ~/.godel
          key: ${{ runner.os }}-godel-${{ hashFiles('godelw', 'godel/config/godel.yml') }}
          restore-keys: |
            ${{ runner.os }}-godel-

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: out/build/

      - name: Run tests
        run: ./godelw test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            out/test/
          retention-days: 5

  dist:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        go-version: ["1.24.3"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache gödel
        uses: actions/cache@v4
        with:
          path: ~/.godel
          key: ${{ runner.os }}-godel-${{ hashFiles('godelw', 'godel/config/godel.yml') }}
          restore-keys: |
            ${{ runner.os }}-godel-

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: out/build/

      - name: Create distribution
        run: ./godelw dist

      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: out/dist/
          retention-days: 30

  # Integration job that waits for all checks to pass
  # This mimics the "circle-all" job from CircleCI
  check:
    name: ✅ Check
    runs-on: ubuntu-latest
    if: always()
    needs:
      - build
      - verify
      - test
      - dist

    steps:
      - name: Require all jobs to succeed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
